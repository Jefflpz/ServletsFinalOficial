Index: src/main/webapp/pages/adm.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"org.example.crud_site.dao.AdmDAO\" %>\r\n<%@ page import=\"org.example.crud_site.model.Adm\" %>\r\n<%@ page import=\"java.util.List\" %>\r\n<%@ page import=\"java.util.ArrayList\" %>\r\n<%@ page contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\" %>\r\n<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <link rel=\"stylesheet\" href=\"css/adm.css\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Adm</title>\r\n</head>\r\n<body>\r\n<aside class=\"sidebar\">\r\n    <div class=\"titulo\">\r\n        <h1><span class=\"inclus\">Inclus</span><span class=\"es\">es</span></h1>\r\n    </div>\r\n    <nav>\r\n        <ul>\r\n            <li><a href=\"#\"><img src=\"img/house.png\">Home</a></li>\r\n            <div class=\"elemento\"></div>\r\n            <li class=\"selecionado\"><a href=\"#\">Adm</a></li>\r\n            <li><a href=\"listarPermissao_Vaga\">Permissão Vaga</a></li>\r\n            <li><a href=\"listarPermissao_Curso\">Permissão Curso</a></li>\r\n            <li><a href=\"listarSetor\">Setores</a></li>\r\n            <li><a href=\"listarTipo_arquivo\">Tipo de arquivo</a></li>\r\n            <li><a href=\"listarTipo_Vaga\">Tipo de vaga</a></li>\r\n            <li><a href=\"listarSituacao_Trabalhistas\">Situação trabalhista</a></li>\r\n            <li><a href=\"listarStatus_Curso\">Status curso</a></li>\r\n            <li><a href=\"index.html\" class=\"logout\">Sair</a></li>\r\n        </ul>\r\n    </nav>\r\n\r\n</aside>\r\n\r\n<div class=\"container\">\r\n    <main class=\"main-content\">\r\n        <div class=\"titulo\">\r\n            <h1>Adm</h1>\r\n            <button class=\"filtrar\">Filtrar <span class=\"pesquisa\"> > </span></button>\r\n            <button class=\"inserir-adm\">Inserir Adm</button>\r\n        </div>\r\n\r\n        <div id=\"filtrar-bar\" style=\"display: none;\">\r\n            <form action=\"#\" method=\"get\">\r\n                <select name=\"filter-field\">\r\n                    <option value=\"\">Escolher campo</option>\r\n                    <option value=\"todos\">Todos</option>\r\n                    <option value=\"registro-filtro\">Registro</option>\r\n                    <option value=\"username-filtro\">Username</option>\r\n                </select>\r\n                <input type=\"text\" name=\"search\" placeholder=\"Pesquisar...\">\r\n                <button type=\"submit\">Aplicar</button>\r\n            </form>\r\n        </div>\r\n\r\n        <div class=\"grid-container\">\r\n            <div class=\"grid-header registro\">Registro</div>\r\n            <div class=\"grid-header username\">Username</div>\r\n            <div class=\"grid-header senha\">Senha</div>\r\n            <div class=\"grid-header acoes\">Ações</div>\r\n\r\n            <%\r\n                List<Adm> lista = (List<Adm>) request.getAttribute(\"listarAdm\");\r\n\r\n                if (!lista.isEmpty()) {\r\n                    for (int i = 0; i < lista.size(); i++) {\r\n            %>\r\n            <div class=\"grid-item registro\"><%= i+1 %></div>\r\n            <div class=\"grid-item username\"><%= lista.get(i).getUsername() %></div>\r\n            <div class=\"grid-item\"> <%= (lista.get(i).getSenha() != null) ? \"*\".repeat(lista.get(i).getSenha().length()) : \"\" %></div>\r\n            <div class=\"grid-item\">\r\n                <button class=\"action edit\"\r\n                        data-id=\"<%= lista.get(i).getId() %>\"\r\n                        data-username=\"<%= lista.get(i).getUsername() %>\"\r\n                        data-senha=\"<%= lista.get(i).getSenha() %>\">\r\n                    <img src=\"img/lapis.png\" alt=\"editar adm\"></button>\r\n                <form action=\"excluirAdm\" method=\"post\">\r\n                    <input type=\"hidden\" name=\"id\" value=\"<%=lista.get(i).getId()%>\">\r\n                    <button id=\"delete\" class=\"action delete\"><img src=\"img/lixo.png\" alt=\"\"></button>\r\n                </form>\r\n            </div>\r\n            <%\r\n                }\r\n            } else {\r\n            %>\r\n            <div class=\"grid-item\">Nenhum registro encontrado.</div>\r\n            <%\r\n                    System.out.println(\"Nenhum registro encontrado.\");\r\n                }\r\n            %>\r\n        </div>\r\n\r\n    </main>\r\n\r\n    <div id=\"popupID\" style=\"display: none;\">\r\n        <div class=\"popup\">\r\n            <form id=\"cadastroForm\" action=\"inserirAdm\" method=\"post\" class=\"registrar\">\r\n                <div class=\"bloco-titulo\">\r\n                    <h2 class=\"titulo\">Cadastrar administrador</h2>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"novoAdm\" class=\"label\">Login:</label>\r\n                    <input type=\"text\" id=\"novoAdm\" name=\"username\" placeholder=\"avnadmin\" class=\"input\" required />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\">Digite a senha:</label>\r\n                    <div class=\"password-container\">\r\n                        <input type=\"password\" placeholder=\"*\" id=\"novoSenha\" name=\"senha\" class=\"input password\" required/>\r\n                    </div>\r\n                </div>\r\n                <span id=\"erro\" class=\"mensagem-erro\"></span>\r\n\r\n                <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                <button type=\"button\" class=\"b bt-cancelar\">Cancelar</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"popupIDadm\" style=\"display: none;\">\r\n        <div class=\"popup\">\r\n            <form action=\"#\" class=\"registrar\" id=\"editarForm\">\r\n                <div class=\"bloco-titulo\">\r\n                    <h2 class=\"titulo\">Editar Adm</h2>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"admEditado\" class=\"label\">Login:</label>\r\n                    <input type=\"text\" id=\"admEditado\" name=\"login\" class=\"input\" required />\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                    <label class=\"label\">Digite a senha:</label>\r\n                    <div class=\"password-container\">\r\n                        <input type=\"password\" id=\"senhaEditada\" class=\"input password\" required/>\r\n                    </div>\r\n                </div>\r\n                <span id=\"erroEditar\" class=\"mensagem-erro\"></span>\r\n\r\n                <button type=\"submit\" class=\"b bt-registrar\">Confirmar alterações</button>\r\n                <button type=\"button\" class=\"b bt-cancelar-edit\">Cancelar</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<script src=\"js/adm.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/pages/adm.jsp b/src/main/webapp/pages/adm.jsp
--- a/src/main/webapp/pages/adm.jsp	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/webapp/pages/adm.jsp	(date 1730889072454)
@@ -76,7 +76,7 @@
                         data-username="<%= lista.get(i).getUsername() %>"
                         data-senha="<%= lista.get(i).getSenha() %>">
                     <img src="img/lapis.png" alt="editar adm"></button>
-                <form action="excluirAdm" method="post">
+                <form action="excluirAdm" method="post">,wh
                     <input type="hidden" name="id" value="<%=lista.get(i).getId()%>">
                     <button id="delete" class="action delete"><img src="img/lixo.png" alt=""></button>
                 </form>
Index: src/main/webapp/pages/setor.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"org.example.crud_site.model.Setor\" %>\r\n<%@ page import=\"java.util.List\" %>\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>CRUD Setor</title>\r\n  <link rel=\"stylesheet\" href=\"css/setor.css\">\r\n</head>\r\n<body>\r\n\r\n\r\n  <aside class=\"sidebar\">\r\n    <div class=\"titulo\">\r\n        <h1><span class=\"inclus\">Inclus</span><span class=\"es\">es</span></h1>\r\n    </div>\r\n      <nav>\r\n        <ul>\r\n            <li><a href=\"#\"><img src=\"img/casa.png\">Home</a></li>\r\n            <li><a href=\"listarAdm\">Adm</a></li>\r\n            <li><a href=\"listarPermissao_Vaga\">Permissão Vaga</a></li>\r\n            <li><a href=\"listarPermissao_Curso\">Permissão Curso</a></li>\r\n            <div class=\"elemento\"></div>\r\n            <li class=\"selecionado\"><a href=\"#\">Setores</a></li>\r\n            <li><a href=\"listarTipo_arquivo\">Tipo de arquivo</a></li>\r\n            <li><a href=\"listarTipo_Vaga\">Tipo de vaga</a></li>\r\n            <li><a href=\"listarSituacao_Trabalhistas\">Situação trabalhista</a></li>\r\n            <li><a href=\"listarStatus_Curso\">Status curso</a></li>\r\n            <li><a href=\"index.html\" class=\"logout\">Sair</a></li>\r\n        </ul>\r\n    </nav>\r\n  </aside>\r\n\r\n\r\n    <div class=\"container\">\r\n        <main class=\"main-content\">\r\n            <div class=\"titulo\">\r\n                <h1>Setor</h1>\r\n                <button class=\"filtrar\">Filtrar <span class=\"pesquisa\"> > </span></button>\r\n                <button class=\"inserir-setor\">Inserir Setor</button>\r\n            </div>\r\n\r\n            <!-- Barra de Filtro -->\r\n            <div id=\"filtrar-bar\" style=\"display: none;\">\r\n                <form action=\"#\">\r\n                    <select name=\"filter-field\">\r\n                        <option value=\"\">Escolher campo</option>\r\n                        <option value=\"todos\">Todos</option>\r\n                        <option value=\"registro-filtro\">Registro</option>\r\n                        <option value=\"setor-filtro\">Setor</option>\r\n                    </select>\r\n\r\n                    <input type=\"text\" name=\"search\" placeholder=\"Pesquisar...\">\r\n\r\n                    <button type=\"submit\">Aplicar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"grid-container\">\r\n                <div class=\"grid-header registro\">Registro</div>\r\n                <div class=\"grid-header NOME\">Setor</div>\r\n                <div class=\"grid-header acoes\">Ações</div>\r\n\r\n\r\n                <%\r\n                    List<Setor> lista = (List<Setor>) request.getAttribute(\"listarSetor\");\r\n\r\n                    if (!lista.isEmpty()) {\r\n                        for (int i = 0; i < lista.size(); i++) {\r\n                %>\r\n                <div class=\"grid-item registro\"><%= i+1 %></div>\r\n                <div class=\"grid-item username\"><%= lista.get(i).getNome() %></div>\r\n                <div class=\"grid-item\">\r\n                    <button class=\"action edit\">\r\n                        <img src=\"img/lapis.png\" alt=\"editar setor\"></button>\r\n                    <form action=\"excluirSetor\" method=\"get\">\r\n                        <input type=\"hidden\" id=\"nome\" name=\"nome\" value=\"<%=lista.get(i).getNome()%>\">\r\n                        <button class=\"action delete\"><img src=\"img/lixo.png\" alt=\"excluir setor\"></button>\r\n                    </form>\r\n                </div>\r\n                <%\r\n                    }\r\n                } else {\r\n                %>\r\n                <div class=\"grid-item\">Nenhum registro encontrado.</div>\r\n                <%\r\n                        System.out.println(\"Nenhum registro encontrado.\");\r\n                    }\r\n                %>\r\n            </div>\r\n\r\n        </main>\r\n\r\n        <div id=\"popupID\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"inserirSetor\" class=\"registrar\" method=\"post\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Cadastrar Setor</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cadastrar\" class=\"label\">Setor:</label>\r\n                        <input type=\"text\" id=\"cadastrar\" name=\"cadastrar\" placeholder=\"Aliementício\" class=\"input\" required />\r\n                    </div>\r\n\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- AQUI -->\r\n\r\n        <div id=\"popupIDsetor\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"alterarNomeSetor\" class=\"registrar\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Editar Setor</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editar\" class=\"label\">Setor:</label>\r\n                        <input type=\"text\" id=\"editar\" name=\"editar\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Confirmar alterações</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar-edit\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n  <script src=\"js/setor.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/pages/setor.jsp b/src/main/webapp/pages/setor.jsp
--- a/src/main/webapp/pages/setor.jsp	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/webapp/pages/setor.jsp	(date 1730889471722)
@@ -73,8 +73,9 @@
                 <div class="grid-item registro"><%= i+1 %></div>
                 <div class="grid-item username"><%= lista.get(i).getNome() %></div>
                 <div class="grid-item">
-                    <button class="action edit">
-                        <img src="img/lapis.png" alt="editar setor"></button>
+                        <button class="action edit"
+                                data-nomeSetor="<%= lista.get(i).getNome() %>">
+                            <img src="img/lapis.png" alt="editar setor"></button>
                     <form action="excluirSetor" method="get">
                         <input type="hidden" id="nome" name="nome" value="<%=lista.get(i).getNome()%>">
                         <button class="action delete"><img src="img/lixo.png" alt="excluir setor"></button>
@@ -115,13 +116,15 @@
 
         <div id="popupIDsetor" style="display: none;">
             <div class="popup">
-                <form action="alterarNomeSetor" class="registrar">
+                <form action="alterarNomeSetor" class="registrar" method="post">
                     <div class="bloco-titulo">
                         <h2 class="titulo">Editar Setor</h2>
                     </div>
                     <div class="form-group">
                         <label for="editar" class="label">Setor:</label>
-                        <input type="text" id="editar" name="editar" class="input" required />
+                        <input type="text" id="editar" name="editar" class="input" required/>
+                        <!-- Campo para o segundo valor, como ID -->
+                        <input type="hidden" id="nomeAntigo" name="id" value="<%= lista.get(i).getId() %>" />
                     </div>
 
                     <button type="submit" class="b bt-registrar">Confirmar alterações</button>
Index: src/main/webapp/pages/situacaoTrabalhista.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"java.util.List\" %>\r\n<%@ page import=\"org.example.crud_site.model.SituacaoTrabalhista\" %>\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>CRUD status curso</title>\r\n    <link rel=\"stylesheet\" href=\"css/situacaoTrabalhista.css\">\r\n</head>\r\n<body>\r\n\r\n  <aside class=\"sidebar\">\r\n    <div class=\"titulo\">\r\n        <h1><span class=\"inclus\">Inclus</span><span class=\"es\">es</span></h1>\r\n    </div>\r\n    <nav>\r\n        <ul>\r\n            <li><a href=\"#\"><img src=\"img/casa.png\">Home</a></li>\r\n            <li><a href=\"listarAdm\">Adm</a></li>\r\n            <li><a href=\"listarPermissao_Vaga\">Permissão Vaga</a></li>\r\n            <li><a href=\"listarPermissao_Curso\">Permissão Curso</a></li>\r\n            <li><a href=\"listarSetor\">Setores</a></li>\r\n            <li><a href=\"listarTipo_arquivo\">Tipo de arquivo</a></li>\r\n            <li><a href=\"listarTipo_Vaga\">Tipo de vaga</a></li>\r\n            <div class=\"elemento\"></div>\r\n            <li class=\"selecionado\"><a href=\"#\">Situação trabalhista</a></li>\r\n            <li><a href=\"listarStatus_Curso\">Status curso</a></li>\r\n            <li><a href=\"index.html\" class=\"logout\">Sair</a></li>\r\n        </ul>\r\n    </nav>\r\n  </aside>\r\n\r\n\r\n    <div class=\"container\">\r\n        <main class=\"main-content\">\r\n            <div class=\"titulo\">\r\n                <h1>Situação trabalhista</h1>\r\n                <button class=\"filtrar\">Filtrar <span class=\"pesquisa\"> > </span></button>\r\n                <button class=\"inserir-situacao\">Inserir Situação Trabalhista</button>\r\n            </div>\r\n\r\n            <!-- Barra de Filtro -->\r\n            <div id=\"filtrar-bar\" style=\"display: none;\">\r\n                <form action=\"#\">\r\n                    <select name=\"filter-field\">\r\n                        <option value=\"\">Escolher campo</option>\r\n                        <option value=\"todos\">Todos</option>\r\n                        <option value=\"registro-filtro\">Registro</option>\r\n                        <option value=\"situacao-filtro\">Situação Trabalhistas</option>\r\n                    </select>\r\n\r\n                    <input type=\"text\" name=\"search\" placeholder=\"Pesquisar...\">\r\n\r\n                    <button type=\"submit\">Aplicar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"grid-container\">\r\n                <div class=\"grid-header registro\">Registro</div>\r\n                <div class=\"grid-header username\">Situação Trabalhista</div>\r\n                <div class=\"grid-header acoes\">Ações</div>\r\n\r\n\r\n                <%\r\n                    List<SituacaoTrabalhista> lista = (List<SituacaoTrabalhista>) request.getAttribute(\"listarSituacoes_Trabalhistas\");\r\n\r\n                    if (!lista.isEmpty()) {\r\n                        for (int i = 0; i < lista.size(); i++) {\r\n                %>\r\n                <div class=\"grid-item registro\"><%= i+1 %></div>\r\n                <div class=\"grid-item username\"><%= lista.get(i).getNome() %></div>\r\n                <div class=\"grid-item\">\r\n                    <button class=\"action edit\">\r\n                        <img src=\"img/lapis.png\" alt=\"editar situacao trabalhista\"></button>\r\n                    <form action=\"excluirSituacaoTrabalhista\" method=\"get\">\r\n                        <input type=\"hidden\" id=\"nome\" name=\"nome\" value=\"<%=lista.get(i).getNome()%>\">\r\n                        <button class=\"action delete\"><img src=\"img/lixo.png\" alt=\"excluir situacao trabalhista\"></button>\r\n                    </form>\r\n                </div>\r\n                <%\r\n                    }\r\n                } else {\r\n                %>\r\n                <div class=\"grid-item\">Nenhum registro encontrado.</div>\r\n                <%\r\n                        System.out.println(\"Nenhum registro encontrado.\");\r\n                    }\r\n                %>\r\n            </div>\r\n\r\n        </main>\r\n\r\n\r\n        <!-- AQUI -->\r\n\r\n        <div id=\"popupID\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"inserirSituacaoTrabalhista\" class=\"registrar\" method=\"post\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Inserir Situação Trabalhista</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cadastrar\" class=\"label\">Situação trabalhista:</label>\r\n                        <input type=\"text\" id=\"cadastrar\" name=\"cadastrar\" placeholder=\"avnadmin\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"popupIDSituacaoTrabalhista\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"alterarSituacaoTrabalhista\" class=\"registrar\" method=\"post\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Editar situação trabalhista</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editar\" class=\"label\">Situação trabalhista:</label>\r\n                        <input type=\"text\" id=\"editar\" name=\"editar\" placeholder=\"avnadmin\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar-edit\">Cancelar</button>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- AQUI -->\r\n    </div>\r\n\r\n\r\n<script src=\"js/situacaoTrabalhista.js\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/pages/situacaoTrabalhista.jsp b/src/main/webapp/pages/situacaoTrabalhista.jsp
--- a/src/main/webapp/pages/situacaoTrabalhista.jsp	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/webapp/pages/situacaoTrabalhista.jsp	(date 1730889471709)
@@ -72,7 +72,8 @@
                 <div class="grid-item registro"><%= i+1 %></div>
                 <div class="grid-item username"><%= lista.get(i).getNome() %></div>
                 <div class="grid-item">
-                    <button class="action edit">
+                    <button class="action edit"
+                            data-nomeSituacaoTrabalhista="<%= lista.get(i).getNome() %>">>
                         <img src="img/lapis.png" alt="editar situacao trabalhista"></button>
                     <form action="excluirSituacaoTrabalhista" method="get">
                         <input type="hidden" id="nome" name="nome" value="<%=lista.get(i).getNome()%>">
Index: src/main/webapp/pages/tipoArquivo.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"org.example.crud_site.model.TipoArquivo\" %>\r\n<%@ page import=\"java.util.List\" %>\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>CRUD Adm</title>\r\n  <link rel=\"stylesheet\" href=\"css/tipoArquivo.css\">\r\n</head>\r\n<body>\r\n\r\n    <aside class=\"sidebar\">\r\n        <div class=\"titulo\">\r\n            <h1><span class=\"inclus\">Inclus</span><span class=\"es\">es</span></h1>\r\n        </div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"#\"><img src=\"img/casa.png\">Home</a></li>\r\n                <li ><a href=\"listarAdm\">Adm</a></li>\r\n                <li><a href=\"listarPermissao_Vaga\">Permissão Vaga</a></li>\r\n                <li><a href=\"listarPermissao_Curso\">Permissão Curso</a></li>\r\n                <li><a href=\"listarSetor\">Setores</a></li>\r\n                <div class=\"elemento\"></div>\r\n                <li class=\"selecionado\"><a href=\"#\">Tipo de arquivo</a></li>\r\n                <li><a href=\"listarTipo_Vaga\">Tipo de vaga</a></li>\r\n                <li><a href=\"listarSituacao_Trabalhistas\">Situação trabalhista</a></li>\r\n                <li><a href=\"listarStatus_Curso\">Status curso</a></li>\r\n                <li><a href=\"index.html\" class=\"logout\">Sair</a></li>\r\n            </ul>\r\n        </nav>\r\n    </aside>\r\n\r\n    <div class=\"container\">\r\n        <main class=\"main-content\">\r\n            <div class=\"titulo\">\r\n                <h1>Tipo do Arquivo</h1>\r\n                <button class=\"filtrar\">Filtrar <span class=\"pesquisa\"> > </span></button>\r\n                <button class=\"inserir-arquivo\">Inserir Arquivo</button>\r\n            </div>\r\n\r\n            <!-- Barra de Filtro -->\r\n            <div id=\"filtrar-bar\" style=\"display: none;\">\r\n                <form action=\"#\">\r\n                    <select name=\"filter-field\">\r\n                        <option value=\"\">Escolher campo</option>\r\n                        <option value=\"todos\">Todos</option>\r\n                        <option value=\"registro-filtro\">Registro</option>\r\n                        <option value=\"tipoArquivo-filtro\">Tipo do arquivo</option>\r\n                    </select>\r\n\r\n                    <input type=\"text\" name=\"search\" placeholder=\"Pesquisar...\">\r\n\r\n                    <button type=\"submit\">Aplicar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"grid-container\">\r\n              <div class=\"grid-header registro\">Registro</div>\r\n              <div class=\"grid-header senha\">Tipo do arquivo</div>\r\n              <div class=\"grid-header acoes\">Ações</div>\r\n\r\n                <%\r\n                    List<TipoArquivo> lista = (List<TipoArquivo>) request.getAttribute(\"listarTipo_Arquivo\");\r\n\r\n                    if (!lista.isEmpty()) {\r\n                        for (int i = 0; i < lista.size(); i++) {\r\n                %>\r\n                <div class=\"grid-item registro\"><%= i+1 %></div>\r\n                <div class=\"grid-item username\"><%= lista.get(i).getNome() %></div>\r\n                <div class=\"grid-item\">\r\n                    <button class=\"action edit\">\r\n                        <img src=\"img/lapis.png\" alt=\"editar status curso\"></button>\r\n                    <form action=\"excluirTipoArquivo\" method=\"get\">\r\n                        <input type=\"hidden\" id=\"nome\" name=\"id\" value=\"<%=lista.get(i).getId()%>\">\r\n                        <button class=\"action delete\"><img src=\"img/lixo.png\" alt=\"excluir status curso\"></button>\r\n                    </form>\r\n                </div>\r\n                <%\r\n                    }\r\n                } else {\r\n                %>\r\n                <div class=\"grid-item\">Nenhum registro encontrado.</div>\r\n                <%\r\n                        System.out.println(\"Nenhum registro encontrado.\");\r\n                    }\r\n                %>\r\n            </div>\r\n\r\n        </main>\r\n\r\n\r\n        <!-- AQUI -->\r\n\r\n        <div id=\"popupID\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"inserirTipo_Arquivo\" class=\"registrar\" method=\"post\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Inserir status curso</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cadastrar\" class=\"label\">Status curso:</label>\r\n                        <input type=\"text\" id=\"cadastrar\" name=\"cadastrar\" placeholder=\"em andamento\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"popupIDArquivo\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"#\" class=\"registrar\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Editar status curso</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editar\" class=\"label\">Status curso:</label>\r\n                        <input type=\"text\" id=\"editar\" name=\"editar\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar-edit\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  <script src=\"js/tipoArquivo.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/pages/tipoArquivo.jsp b/src/main/webapp/pages/tipoArquivo.jsp
--- a/src/main/webapp/pages/tipoArquivo.jsp	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/webapp/pages/tipoArquivo.jsp	(date 1730889471697)
@@ -70,8 +70,9 @@
                 <div class="grid-item registro"><%= i+1 %></div>
                 <div class="grid-item username"><%= lista.get(i).getNome() %></div>
                 <div class="grid-item">
-                    <button class="action edit">
-                        <img src="img/lapis.png" alt="editar status curso"></button>
+                    <button class="action edit"
+                            data-nomeTipoArquivo="<%= lista.get(i).getNome() %>">>
+                        <img src="img/lapis.png" alt="editar tipo arquivo"></button>
                     <form action="excluirTipoArquivo" method="get">
                         <input type="hidden" id="nome" name="id" value="<%=lista.get(i).getId()%>">
                         <button class="action delete"><img src="img/lixo.png" alt="excluir status curso"></button>
Index: src/main/webapp/pages/tipoVaga.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"org.example.crud_site.model.TipoArquivo\" %>\r\n<%@ page import=\"java.util.List\" %>\r\n<%@ page import=\"org.example.crud_site.model.TipoVaga\" %>\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>CRUD Adm</title>\r\n  <link rel=\"stylesheet\" href=\"css/tipoVaga.css\">\r\n</head>\r\n<body>\r\n\r\n    <aside class=\"sidebar\">\r\n        <div class=\"titulo\">\r\n            <h1><span class=\"inclus\">Inclus</span><span class=\"es\">es</span></h1>\r\n        </div>\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"#\"><img src=\"img/casa.png\">Home</a></li>\r\n                <li ><a href=\"listarAdm\">Adm</a></li>\r\n                <li><a href=\"listarPermissao_Vaga\">Permissão Vaga</a></li>\r\n                <li><a href=\"listarPermissao_Curso\">Permissão Curso</a></li>\r\n                <li><a href=\"listarSetor\">Setores</a></li>\r\n                <li ><a href=\"listarTipo_arquivo\">Tipo de arquivo</a></li>\r\n                <div class=\"elemento\"></div>\r\n                <li class=\"selecionado\"><a href=\"#\">Tipo de vaga</a></li>\r\n                <li><a href=\"listarSituacao_Trabalhistas\">Situação trabalhista</a></li>\r\n                <li><a href=\"listarStatus_Curso\">Status curso</a></li>\r\n                <li><a href=\"index.html\" class=\"logout\">Sair</a></li>\r\n            </ul>\r\n        </nav>\r\n    </aside>\r\n\r\n    <div class=\"container\">\r\n        <main class=\"main-content\">\r\n            <div class=\"titulo\">\r\n                <h1>Tipo da vaga</h1>\r\n                <button class=\"filtrar\">Filtrar <span class=\"pesquisa\"> > </span></button>\r\n                <button class=\"inserir-vaga\">Inserir Vaga</button>\r\n            </div>\r\n\r\n            <!-- Barra de Filtro -->\r\n            <div id=\"filtrar-bar\" style=\"display: none;\">\r\n                <form action=\"#\">\r\n                    <select name=\"filter-field\">\r\n                        <option value=\"\">Escolher campo</option>\r\n                        <option value=\"todos\">Todos</option>\r\n                        <option value=\"registro-filtro\">Registro</option>\r\n                        <option value=\"tipoVaga-filtro\">Tipo de Vaga</option>\r\n                    </select>\r\n\r\n                    <input type=\"text\" name=\"search\" placeholder=\"Pesquisar...\">\r\n\r\n                    <button type=\"submit\">Aplicar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"grid-container\">\r\n              <div class=\"grid-header registro\">Registro</div>\r\n              <div class=\"grid-header username\">Tipo da vaga</div>\r\n              <div class=\"grid-header acoes\">Ações</div>\r\n\r\n                <%\r\n                    List<TipoVaga> lista = (List<TipoVaga>) request.getAttribute(\"listarTipo_Vaga\");\r\n\r\n                    if (!lista.isEmpty()) {\r\n                        for (int i = 0; i < lista.size(); i++) {\r\n                %>\r\n                <div class=\"grid-item registro\"><%= i+1 %></div>\r\n                <div class=\"grid-item username\"><%= lista.get(i).getNome() %></div>\r\n                <div class=\"grid-item\">\r\n                    <button class=\"action edit\">\r\n                        <img src=\"img/lapis.png\" alt=\"editar tipo vaga\"></button>\r\n                    <form action=\"excluirTipo_Vaga\" method=\"get\">\r\n                        <input type=\"hidden\" id=\"nome\" name=\"nome\" value=\"<%=lista.get(i).getNome()%>\">\r\n                        <button class=\"action delete\"><img src=\"img/lixo.png\" alt=\"excluir tipo vaga\"></button>\r\n                    </form>\r\n                </div>\r\n                <%\r\n                    }\r\n                } else {\r\n                %>\r\n                <div class=\"grid-item\">Nenhum registro encontrado.</div>\r\n                <%\r\n                        System.out.println(\"Nenhum registro encontrado.\");\r\n                    }\r\n                %>\r\n            </div>\r\n\r\n        </main>\r\n\r\n\r\n        <!-- AQUI -->\r\n\r\n        <div id=\"popupID\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"inserirTipo_Vaga\" class=\"registrar\" method=\"post\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Inserir tipo vaga</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cadastrar\" class=\"label\">Tipo vaga:</label>\r\n                        <input type=\"text\" id=\"cadastrar\" name=\"cadastrar\" placeholder=\"Em andamento\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"popupIDTipoVaga\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"atualizarTipo_Vaga\" class=\"registrar\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Editar tipo vaga</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editar\" class=\"label\">Tipo vaga:</label>\r\n                        <input type=\"text\" id=\"editar\" name=\"editar\" placeholder=\"cancelado\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar-edit\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        </div>\r\n    </div>\r\n  <script src=\"js/tipoVaga.js\"></script>\r\n</body>\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/pages/tipoVaga.jsp b/src/main/webapp/pages/tipoVaga.jsp
--- a/src/main/webapp/pages/tipoVaga.jsp	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/webapp/pages/tipoVaga.jsp	(date 1730889471750)
@@ -70,7 +70,8 @@
                 %>
                 <div class="grid-item registro"><%= i+1 %></div>
                 <div class="grid-item username"><%= lista.get(i).getNome() %></div>
-                <div class="grid-item">
+                <div class="grid-item"
+                     data-nomeTipoVaga="<%= lista.get(i).getNome() %>">>
                     <button class="action edit">
                         <img src="img/lapis.png" alt="editar tipo vaga"></button>
                     <form action="excluirTipo_Vaga" method="get">
Index: src/main/webapp/pages/statusCurso.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><%@ page import=\"org.example.crud_site.model.StatusCurso\" %>\r\n<%@ page import=\"java.util.List\" %>\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>CRUD status curso</title>\r\n  <link rel=\"stylesheet\" href=\"css/statusCurso.css\">\r\n</head>\r\n<body>\r\n\r\n  <aside class=\"sidebar\">\r\n    <div class=\"titulo\">\r\n        <h1><span class=\"inclus\">Inclus</span><span class=\"es\">es</span></h1>\r\n    </div>\r\n    <nav>\r\n        <ul>\r\n            <li><a href=\"#\"><img src=\"img/casa.png\">Home</a></li>\r\n            <li><a href=\"listarAdm\">Adm</a></li>\r\n            <li><a href=\"listarPermissao_Vaga\">Permissão Vaga</a></li>\r\n            <li><a href=\"listarPermissao_Curso\">Permissão Curso</a></li>\r\n            <li><a href=\"listarSetor\">Setores</a></li>\r\n            <li><a href=\"listarTipo_arquivo\">Tipo de arquivo</a></li>\r\n            <li><a href=\"listarTipo_Vaga\">Tipo de vaga</a></li>\r\n            <li><a href=\"listarSituacao_Trabalhistas\">Situação trabalhista</a></li>\r\n            <div class=\"elemento\"></div>\r\n            <li class=\"selecionado\"><a href=\"#\">Status curso</a></li>\r\n            <li><a href=\"index.html\" class=\"logout\">Sair</a></li>\r\n        </ul>\r\n    </nav>\r\n    </aside>\r\n\r\n\r\n    <div class=\"container\">\r\n        <main class=\"main-content\">\r\n            <div class=\"titulo\">\r\n                <h1>Status curso</h1>\r\n                <button class=\"filtrar\">Filtrar <span class=\"pesquisa\"> > </span></button>\r\n                <button class=\"inserir-status-curso\">Inserir Status Curso </button>\r\n            </div>\r\n\r\n            <!-- Barra de Filtro -->\r\n            <div id=\"filtrar-bar\" style=\"display: none;\">\r\n                <form action=\"#\">\r\n                    <select name=\"filter-field\">\r\n                        <option value=\"\">Escolher campo</option>\r\n                        <option value=\"todos\">Todos</option>\r\n                        <option value=\"registro-filtro\">Registro</option>\r\n                        <option value=\"status-filtro\">Status Curso</option>\r\n                    </select>\r\n\r\n                    <input type=\"text\" name=\"search\" placeholder=\"Pesquisar...\">\r\n\r\n                    <button type=\"submit\">Aplicar</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"grid-container\">\r\n                <div class=\"grid-header registro\">Registro</div>\r\n                <div class=\"grid-header Nome\">Status do curso</div>\r\n                <div class=\"grid-header ações\">Ações</div>\r\n\r\n\r\n                <%\r\n                    List<StatusCurso> lista = (List<StatusCurso>) request.getAttribute(\"listarStatus_curso\");\r\n\r\n                    if (!lista.isEmpty()) {\r\n                        for (int i = 0; i < lista.size(); i++) {\r\n                %>\r\n                <div class=\"grid-item registro\"><%= i+1 %></div>\r\n                <div class=\"grid-item username\"><%= lista.get(i).getNome() %></div>\r\n                <div class=\"grid-item\">\r\n                    <button class=\"action edit\">\r\n                        <img src=\"img/lapis.png\" alt=\"editar status curso\"></button>\r\n                    <form action=\"excluirStatusCurso\" method=\"get\">\r\n                        <input type=\"hidden\" id=\"nome\" name=\"nome\" value=\"<%=lista.get(i).getNome()%>\">\r\n                        <button class=\"action delete\"><img src=\"img/lixo.png\" alt=\"excluir status curso\"></button>\r\n                    </form>\r\n                </div>\r\n                <%\r\n                    }\r\n                } else {\r\n                %>\r\n                <div class=\"grid-item\">Nenhum registro encontrado.</div>\r\n                <%\r\n                        System.out.println(\"Nenhum registro encontrado.\");\r\n                    }\r\n                %>\r\n            </div>\r\n\r\n        </main>\r\n\r\n\r\n        <!-- AQUI -->\r\n\r\n        <div id=\"popupID\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"inserirStatus_Curso\" class=\"registrar\" method=\"post\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Inserir Status Curso</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cadastrar\" class=\"label\">Status curso:</label>\r\n                        <input type=\"text\" id=\"cadastrar\" name=\"cadastrar\" placeholder=\"Em andamento\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"popupIDStatusCurso\" style=\"display: none;\">\r\n            <div class=\"popup\">\r\n                <form action=\"\" class=\"registrar\">\r\n                    <div class=\"bloco-titulo\">\r\n                        <h2 class=\"titulo\">Editar status curso</h2>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"editar\" class=\"label\">Status curso:</label>\r\n                        <input type=\"text\" id=\"editar\" name=\"editar\" placeholder=\"cancelado\" class=\"input\" required />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"b bt-registrar\">Cadastrar</button>\r\n                    <button type=\"button\" class=\"b bt-cancelar-edit\">Cancelar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n  <script src=\"js/statusCurso.js\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/pages/statusCurso.jsp b/src/main/webapp/pages/statusCurso.jsp
--- a/src/main/webapp/pages/statusCurso.jsp	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/webapp/pages/statusCurso.jsp	(date 1730889471735)
@@ -72,7 +72,8 @@
                 <div class="grid-item registro"><%= i+1 %></div>
                 <div class="grid-item username"><%= lista.get(i).getNome() %></div>
                 <div class="grid-item">
-                    <button class="action edit">
+                    <button class="action edit"
+                            data-nomeStatusCurso="<%= lista.get(i).getNome() %>">>
                         <img src="img/lapis.png" alt="editar status curso"></button>
                     <form action="excluirStatusCurso" method="get">
                         <input type="hidden" id="nome" name="nome" value="<%=lista.get(i).getNome()%>">
Index: src/main/java/org/example/crud_site/dao/AdmDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.crud_site.dao;\r\n\r\n// Importando a classe Adm para usar os seus atributos e métodos.\r\n\r\nimport org.example.crud_site.model.Adm;\r\n\r\n//importando a classe SQLException para tratar os erros de SQL.\r\nimport java.sql.SQLException;\r\n\r\n// Importando a classe ArrayList para criar uma lista de administradores\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n// Importando a classe UUID para usar nos ids.\r\nimport java.util.UUID;\r\n\r\n//Classe AdmDAO\r\npublic class AdmDAO{\r\n\r\n    // objeto que acessa os atributos que gerenciam o banco de dados\r\n    private Conexao conexao;\r\n\r\n    //Construtor atribui a conexao uma nova Conexao() com os atribuitos da classe Conexao.\r\n    public AdmDAO() {\r\n        conexao = new Conexao();\r\n    }\r\n\r\n    // Método para inserir um novo registro na tabala Adm\r\n    public boolean inserirAdm(String username, String senha) {\r\n\r\n        conexao.conectar();\r\n        try{\r\n\r\n            // Instrução SQL para inserir um administrador na tabela Adm.\r\n            String sql = \"INSERT INTO adm (username, senha) VALUES (?,?)\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n\r\n            // Define os valores dos parâmetros da consulta\r\n            conexao.pstmt.setString(1, username);\r\n            conexao.pstmt.setString(2, senha);\r\n\r\n            //Executa a instrução SQL e se o numero de linhas afetadas for maior que 0 insere um usuário no banco de dados.\r\n            if (conexao.pstmt.executeUpdate() > 0) {\r\n\r\n                // Instrução SQL pra inserir um administrador no banco\r\n                conexao.pstmt = conexao.conn.prepareStatement(\"CREATE USER \" + username + \" WITH PASSWORD '\" + senha + \"'\"  );\r\n                // Executa a instrução SQL\r\n                conexao.pstmt.executeUpdate();\r\n\r\n                //retorna true se não der erro\r\n                return true;\r\n            }\r\n            return false;\r\n\r\n        }catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }finally {\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n    // Método para alterar a senha de um administrador na tabela Adm\r\n    public boolean alterarSenhaAdm(String novaSenha, UUID id) {\r\n        conexao.conectar();\r\n        try {\r\n\r\n            // Instrução SQL para inserir um administrador na tabela Adm.\r\n            String sql = \"UPDATE adm SET senha=? WHERE id=?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n\r\n            // Define os valores dos parâmetros na consulta SQL\r\n            conexao.pstmt.setString(1, novaSenha);\r\n            conexao.pstmt.setObject(2, id);\r\n\r\n            // Executa a instrução SQL.\r\n            int rows = conexao.pstmt.executeUpdate();\r\n\r\n            // Verifica se a instrução SQL alterou algum registro.\r\n            if (rows == 0) {\r\n                throw new RuntimeException(\"Nenhum registro encontrado.\");\r\n            }\r\n            // retorna true se a quantidade\r\n            return rows > 0;\r\n        }catch (SQLException e){\r\n            return false;\r\n        }finally {\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n    // Método para alterar o login de um administrador na tabela Adm\r\n    public boolean alterarLoginAdm(String novoUsername, UUID id) {\r\n        conexao.conectar();\r\n        try {\r\n\r\n            // Instrução SQL para inserir um administrador na tabela Adm.\r\n            String sql = \"UPDATE adm SET username=? WHERE id = ?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n\r\n            // Define os valores dos parâmetros na consulta SQL\r\n            conexao.pstmt.setString(1, novoUsername);\r\n            conexao.pstmt.setObject(2, id);\r\n\r\n            // Executa a instrução SQL.\r\n            int rows = conexao.pstmt.executeUpdate();\r\n\r\n            // Verifica se a instrução SQL alterou algum registro.\r\n            if (rows == 0) {\r\n                throw new RuntimeException(\"Nenhum registro encontrado.\");\r\n            }\r\n            return rows > 0;\r\n        }catch (SQLException e){\r\n            return false;\r\n//            throw new RuntimeException(\"Erro ao atualizar o registro.\", e);\r\n\r\n        }finally {\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n\r\n    // Método para excluir um administrador na tabela Adm\r\n    public boolean excluirAdm(UUID id) {\r\n        conexao.conectar();\r\n        try {\r\n            // Primeiro, obtemos o nome do usuário associado ao administrador que será excluído\r\n            String getUserSql = \"SELECT username FROM adm WHERE id = ?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(getUserSql);\r\n            conexao.pstmt.setObject(1, id);\r\n            conexao.rs = conexao.pstmt.executeQuery();\r\n\r\n            String username = null;\r\n            if (conexao.rs.next()) {\r\n                username = conexao.rs.getString(\"username\");\r\n            }\r\n\r\n            // Verifica se o usuário foi encontrado\r\n            if (username == null) {\r\n                throw new RuntimeException(\"Administrador não encontrado com o ID fornecido.\");\r\n            }\r\n\r\n            // Exclui o administrador da tabela `adm`\r\n            String deleteSql = \"DELETE FROM adm WHERE id = ?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(deleteSql);\r\n            conexao.pstmt.setObject(1, id);\r\n            int rowsAffected = conexao.pstmt.executeUpdate();\r\n\r\n            // Se o administrador foi excluído com sucesso, tenta excluir o usuário do banco\r\n            if (rowsAffected > 0) {\r\n                // Exclui o usuário associado no banco\r\n                String dropUserSql = \"DROP USER \" + username;\r\n                conexao.pstmt = conexao.conn.prepareStatement(dropUserSql);\r\n                conexao.pstmt.executeUpdate();\r\n            }\r\n\r\n            return true;\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(\"Erro ao excluir o administrador ou usuário do banco.\", e);\r\n        } finally {\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // Método para buscar um administrador na tabela Adm\r\n    public Adm buscarAdm(String username){\r\n        conexao.conectar();\r\n\r\n        try {\r\n\r\n            // Instrução SQL para excluir um administrador na tabela Adm\r\n            String sql = \"SELECT * FROM adm WHERE username = ?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n            conexao.pstmt.setString(1, username);\r\n\r\n            // Armazena o resultado da consulta no objeto ResultSet\r\n            conexao.rs = conexao.pstmt.executeQuery();\r\n\r\n            /// Obtem os dados do ResultSet\r\n            if (conexao.rs.next()) {\r\n                UUID id = (UUID) conexao.rs.getObject(1);\r\n                String login = conexao.rs.getString(2);\r\n                String senha = conexao.rs.getString(3);\r\n\r\n                // Cria um objeto Adm com os dados do ResultSet\r\n                return new Adm(id,login, senha);\r\n            }\r\n            return null;\r\n        }catch (SQLException e) {\r\n            // Retorna null caso ocorra algum erro.\r\n            return null;\r\n        }finally {\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n    // Método para buscar um administrador na tabela Adm\r\n    public Adm buscarAdm(String username, String senha){\r\n        conexao.conectar();\r\n\r\n        try {\r\n\r\n            // Instrução SQL para excluir um administrador na tabela Adm\r\n            String sql = \"SELECT * FROM adm WHERE username = ? AND senha = ?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n            conexao.pstmt.setString(1, username);\r\n            conexao.pstmt.setString(2, senha);\r\n\r\n            // Armazena o resultado da consulta no objeto ResultSet\r\n            conexao.rs = conexao.pstmt.executeQuery();\r\n\r\n            /// Obtem os dados do ResultSet\r\n            if (conexao.rs.next()) {\r\n                UUID id = (UUID) conexao.rs.getObject(1);\r\n                String login = conexao.rs.getString(2);\r\n                String senhaAtualizada = conexao.rs.getString(3);\r\n\r\n                // Cria um objeto Adm com os dados do ResultSet\r\n                return new Adm(id,login, senhaAtualizada);\r\n            }\r\n            return null;\r\n        }catch (SQLException e) {\r\n            // Retorna null caso ocorra algum erro.\r\n            return null;\r\n        }finally {\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n    // Método para listar todos os administradores na tabela Adm\r\n    public List<Adm> listarAdms(){\r\n\r\n        // Instrução SQL para listar todos os administradores na tabela Adm\r\n        String sql = \"SELECT * FROM adm\";\r\n\r\n        // Essa linha cria uma lista vazia chamada adms, pronta para armazenar objetos do tipo Adm.\r\n        // Usamos o ArrayList para faciliar a manipulação da lista.\r\n        List<Adm> adms = new ArrayList<>();\r\n\r\n        conexao.conectar();\r\n\r\n        try {\r\n\r\n            // Prepara a instrução SQL para executar a consulta.\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n            // Armazena o resultado da consulta no objeto ResultSet.\r\n            conexao.rs = conexao.pstmt.executeQuery();\r\n\r\n            // Obtem os dados do ResultSet e armazena na lista de administradores.\r\n            // Usamos o while para percorrer o ResultSet caso haja mais de um registro.\r\n            while (conexao.rs.next()) {\r\n\r\n                // Pega os dados do ResultSet\r\n                UUID id = (UUID) conexao.rs.getObject(1);\r\n                String login = conexao.rs.getString(2);\r\n                String senha = conexao.rs.getString(3);\r\n\r\n                // Cria um objeto Adm com os dados do ResultSet\r\n                Adm adm = new Adm(id, login, senha);\r\n\r\n                // Adiciona o objeto Adm na lista de administradores\r\n                adms.add(adm);\r\n            }\r\n        }catch (SQLException e) {\r\n\r\n            // Retorna null caso ocorra algum erro.\r\n            return null;\r\n        }finally {\r\n            conexao.desconectar();\r\n        }\r\n\r\n        // Retorna a lista de administradores\r\n        return adms;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/crud_site/dao/AdmDAO.java b/src/main/java/org/example/crud_site/dao/AdmDAO.java
--- a/src/main/java/org/example/crud_site/dao/AdmDAO.java	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/java/org/example/crud_site/dao/AdmDAO.java	(date 1730889095474)
@@ -39,17 +39,6 @@
             conexao.pstmt.setString(1, username);
             conexao.pstmt.setString(2, senha);
 
-            //Executa a instrução SQL e se o numero de linhas afetadas for maior que 0 insere um usuário no banco de dados.
-            if (conexao.pstmt.executeUpdate() > 0) {
-
-                // Instrução SQL pra inserir um administrador no banco
-                conexao.pstmt = conexao.conn.prepareStatement("CREATE USER " + username + " WITH PASSWORD '" + senha + "'"  );
-                // Executa a instrução SQL
-                conexao.pstmt.executeUpdate();
-
-                //retorna true se não der erro
-                return true;
-            }
             return false;
 
         }catch (SQLException e) {
Index: src/main/webapp/js/adm.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const novoAdmin = document.getElementById('novoAdm');\r\nconst novaSenha = document.getElementById('novoSenha');\r\nconst cadastroForm = document.getElementById('cadastroForm');\r\nconst erro = document.getElementById('erro');\r\nconst senhaEditada = document.getElementById('senhaEditada');\r\nconst admEditado = document.getElementById('admEditado');\r\nconst editarForm = document.getElementById('editarForm');\r\nconst erroEditar = document.getElementById('erroEditar');\r\nlet idAdm = null;\r\n\r\n// Regex para validação\r\nconst patternSenha = /^(?=.*[A-Z])(?=.*\\d)(?=.*[a-z])(?=.*[áàâãéèêíïóôõöú])?(?=.*[\\!\\@\\#\\$%\\^\\&\\(\\)\\_\\-\\+\\=\\[\\]\\{\\}\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?]).{8,}$/;\r\nconst patternAdm = /^adm((?=.[A-Z]{1,})?|(?=.[a-z]{1,}))(?=.\\d{1,})?(?=.[!@#$%^&*()_\\-+=[]\\{}\\|;:'\",\\.<>\\/\\?])?.{3,}/;\r\n\r\ndocument.querySelectorAll('.view-password').forEach(button => {\r\n    button.addEventListener('click', function () {\r\n        const passwordCell = this.parentElement.previousElementSibling;\r\n        passwordCell.textContent = passwordCell.textContent === '' ? 'admin123' : '';\r\n    });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const filterButton = document.querySelector('.filtrar');\r\n    const filterBar = document.getElementById('filtrar-bar');\r\n    filterButton.addEventListener('click', toggleFilterBar);\r\n\r\n    function toggleFilterBar() {\r\n        filterBar.style.display = filterBar.style.display === 'none' ? 'flex' : 'none';\r\n    }\r\n\r\n    const inserirADM = document.querySelector('.inserir-adm');\r\n    const editADM = document.querySelectorAll('.edit');\r\n    const cancelADM = document.querySelector('.bt-cancelar');\r\n    const cancelADMedi = document.querySelector('.bt-cancelar-edit');\r\n\r\n    const popupADM = document.getElementById('popupID');\r\n    const popupADMedit = document.getElementById('popupIDadm');\r\n\r\n    let i = 0; // Corrigido: declaração do índice\r\n    for (i = 0; i < editADM.length; i++) {\r\n        editADM[i].addEventListener('click', (e) => togglePopupedit(e));\r\n    }\r\n\r\n    cancelADM.addEventListener('click', cancelPopup);\r\n    cancelADMedi.addEventListener('click', cancelPopupedit);\r\n\r\n    inserirADM.addEventListener('click', togglePopup);\r\n\r\n    function togglePopup() {\r\n        popupADM.style.display = popupADM.style.display === 'none' ? 'flex' : 'none';\r\n    }\r\n\r\n    function togglePopupedit(e) {\r\n        popupADMedit.style.display = popupADMedit.style.display === 'none' ? 'flex' : 'none';\r\n        let usernameEdit = document.getElementById('admEditado');\r\n        usernameEdit.value = e.currentTarget.getAttribute('data-username');\r\n\r\n        console.log(e.currentTarget);\r\n        idAdm = e.currentTarget.getAttribute('data-id');\r\n        console.log(id);\r\n    }\r\n\r\n    inserirADM.addEventListener('click', togglePopup);\r\n\r\n    function togglePopup() {\r\n        popupADM.style.display = popupADM.style.display === 'none' ? 'flex' : 'none';\r\n    }\r\n\r\n    function cancelPopup() {\r\n        popupADM.style.display = 'none';\r\n    }\r\n    function cancelPopupedit() {\r\n        popupADMedit.style.display = 'none';\r\n    }\r\n\r\n    const form = filterBar.querySelector('form');\r\n    form.addEventListener('submit', function(event) {\r\n        event.preventDefault();\r\n\r\n        const selectedField = this['filter-field'].value;\r\n        const searchTerm = this['search'].value.toLowerCase();\r\n\r\n        if (!selectedField) return;\r\n\r\n        const gridItems = document.querySelectorAll('.grid-container .grid-item');\r\n        gridItems.forEach(item => item.style.display = 'none');\r\n\r\n        let found = false;\r\n\r\n        for (let i = 0; i < gridItems.length; i += 4) {\r\n            const registro = gridItems[i];\r\n            const username = gridItems[i + 1];\r\n            const senha = gridItems[i + 2];\r\n            const acoes = gridItems[i + 3];\r\n\r\n            let shouldDisplay = false;\r\n            if (selectedField === 'todos') {\r\n                shouldDisplay = true;\r\n            } else if (selectedField === 'registro-filtro') {\r\n                shouldDisplay = registro.textContent.toLowerCase().includes(searchTerm);\r\n            } else if (selectedField === 'username-filtro') {\r\n                shouldDisplay = username.textContent.toLowerCase().includes(searchTerm);\r\n            }\r\n\r\n            if (shouldDisplay) {\r\n                registro.style.display = 'flex';\r\n                username.style.display = 'flex';\r\n                senha.style.display = 'flex';\r\n                acoes.style.display = 'flex';\r\n                found = true;\r\n            }\r\n        }\r\n\r\n        if (!found) {\r\n            alert('Nenhum item encontrado.');\r\n        }\r\n    });\r\n});\r\n\r\n    editarForm.addEventListener('submit', async (e) => {\r\n        e.preventDefault();\r\n\r\n        erroEditar.textContent = '';\r\n        let isValid = true;\r\n\r\n        // Validação do ADM\r\n        if (!patternAdm.test(admEditado.value) || !patternSenha.test(senhaEditada.value)) {\r\n            erroEditar.textContent = 'Administrador ou senha inválida(o)!';\r\n            isValid = false;\r\n        }\r\n\r\n        if (isValid) {\r\n            const formData = {\r\n                username: admEditado.value,\r\n                senha: senhaEditada.value,\r\n                id: idAdm\r\n            }\r\n            const response = await fetch('http://localhost:8080/CRUD_Site_war_exploded/alterarLoginAdm', {\r\n                method: 'POST',\r\n                body: JSON.stringify(formData),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            console.log(response);\r\n            if (response.ok) {\r\n                window.alert('Informações atualizadas com sucesso!');\r\n                location.reload();\r\n            } else {\r\n                const result = await response.json();\r\n                window.alert(result.message);\r\n            }\r\n        }});\r\n\r\n    // Validação do login\r\n    cadastroForm.addEventListener('submit', async (e) => {\r\n        e.preventDefault();\r\n\r\n        erro.textContent = '';\r\n        let isValid = true;\r\n\r\n        // Validação do ADM\r\n        if (!patternAdm.test(novoAdmin.value) || !patternSenha.test(novaSenha.value)) {\r\n            erro.textContent = 'Administrador ou senha inválida(o)!';\r\n            isValid = false;\r\n        }\r\n\r\n        if (isValid) {\r\n            const formData = {\r\n                adm: novoAdmin.value,\r\n                senha: novaSenha.value\r\n            }\r\n            const response = await fetch('http://localhost:8080/CRUD_Site_war_exploded/inserirAdm', {\r\n                method: 'POST',\r\n                body: JSON.stringify(formData),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            });\r\n\r\n            console.log(response);\r\n            if (response.ok) {\r\n                window.alert('Cadastro realizado com sucesso!');\r\n                location.reload();\r\n            } else {\r\n                const result = await response.json();\r\n                window.alert(result.message);\r\n            }\r\n        }});\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/js/adm.js b/src/main/webapp/js/adm.js
--- a/src/main/webapp/js/adm.js	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/webapp/js/adm.js	(date 1730889072514)
@@ -9,7 +9,7 @@
 let idAdm = null;
 
 // Regex para validação
-const patternSenha = /^(?=.*[A-Z])(?=.*\d)(?=.*[a-z])(?=.*[áàâãéèêíïóôõöú])?(?=.*[\!\@\#\$%\^\&\(\)\_\-\+\=\[\]\{\}\|\;\:\'\"\,\.\<\>\/\?]).{8,}$/;
+const patternSenha = /^(?=.[A-Z])(?=.\d)(?=.[a-z])(?=.[áàâãéèêíïóôõöú])?(?=.*[\!\@\#\$%\^\&\(\)\_\-\+\=\[\]\{\}\|\;\:\'\"\,\.\<\>\/\?]).{8,}$/;
 const patternAdm = /^adm((?=.[A-Z]{1,})?|(?=.[a-z]{1,}))(?=.\d{1,})?(?=.[!@#$%^&*()_\-+=[]\{}\|;:'",\.<>\/\?])?.{3,}/;
 
 document.querySelectorAll('.view-password').forEach(button => {
@@ -117,76 +117,74 @@
     });
 });
 
-    editarForm.addEventListener('submit', async (e) => {
-        e.preventDefault();
+editarForm.addEventListener('submit', async (e) => {
+    e.preventDefault();
 
-        erroEditar.textContent = '';
-        let isValid = true;
+    erroEditar.textContent = '';
+    let isValid = true;
 
-        // Validação do ADM
-        if (!patternAdm.test(admEditado.value) || !patternSenha.test(senhaEditada.value)) {
-            erroEditar.textContent = 'Administrador ou senha inválida(o)!';
-            isValid = false;
-        }
+    // Validação do ADM
+    if (!patternAdm.test(admEditado.value) || !patternSenha.test(senhaEditada.value)) {
+        erroEditar.textContent = 'Administrador ou senha inválida(o)!';
+        isValid = false;
+    }
 
-        if (isValid) {
-            const formData = {
-                username: admEditado.value,
-                senha: senhaEditada.value,
-                id: idAdm
-            }
-            const response = await fetch('http://localhost:8080/CRUD_Site_war_exploded/alterarLoginAdm', {
-                method: 'POST',
-                body: JSON.stringify(formData),
-                headers: {
-                    'Content-Type': 'application/json',
-                }
-            });
+    if (isValid) {
+        const formData = {
+            username: admEditado.value,
+            senha: senhaEditada.value,
+            id: idAdm
+        }
+        const response = await fetch('http://localhost:8080/CRUD_Site_war_exploded/alterarLoginAdm', {
+            method: 'POST',
+            body: JSON.stringify(formData),
+            headers: {
+                'Content-Type': 'application/json',
+            }
+        });
 
-            console.log(response);
-            if (response.ok) {
-                window.alert('Informações atualizadas com sucesso!');
-                location.reload();
-            } else {
-                const result = await response.json();
-                window.alert(result.message);
-            }
-        }});
+        console.log(response);
+        if (response.ok) {
+            window.alert('Informações atualizadas com sucesso!');
+            location.reload();
+        } else {
+            const result = await response.json();
+            window.alert(result.message);
+        }
+    }});
 
-    // Validação do login
-    cadastroForm.addEventListener('submit', async (e) => {
-        e.preventDefault();
+// Validação do login
+cadastroForm.addEventListener('submit', async (e) => {
+    e.preventDefault();
 
-        erro.textContent = '';
-        let isValid = true;
+    erro.textContent = '';
+    let isValid = true;
 
-        // Validação do ADM
-        if (!patternAdm.test(novoAdmin.value) || !patternSenha.test(novaSenha.value)) {
-            erro.textContent = 'Administrador ou senha inválida(o)!';
-            isValid = false;
-        }
+    // Validação do ADM
+    if (!patternAdm.test(novoAdmin.value) || !patternSenha.test(novaSenha.value)) {
+        erro.textContent = 'Administrador ou senha inválida(o)!';
+        isValid = false;
+    }
 
-        if (isValid) {
-            const formData = {
-                adm: novoAdmin.value,
-                senha: novaSenha.value
-            }
-            const response = await fetch('http://localhost:8080/CRUD_Site_war_exploded/inserirAdm', {
-                method: 'POST',
-                body: JSON.stringify(formData),
-                headers: {
-                    'Content-Type': 'application/json',
-                }
-            });
+    if (isValid) {
+        const formData = {
+            adm: novoAdmin.value,
+            senha: novaSenha.value
+        }
+        const response = await fetch('http://localhost:8080/CRUD_Site_war_exploded/inserirAdm', {
+            method: 'POST',
+            body: JSON.stringify(formData),
+            headers: {
+                'Content-Type': 'application/json',
+            }
+        });
 
-            console.log(response);
-            if (response.ok) {
-                window.alert('Cadastro realizado com sucesso!');
-                location.reload();
-            } else {
-                const result = await response.json();
-                window.alert(result.message);
-            }
-        }});
-
-
+        console.log(response);
+        if (response.ok) {
+            window.alert('Cadastro realizado com sucesso!');
+            location.reload();
+        } else {
+            const result = await response.json();
+            window.alert(result.message);
+        }
+    }});
Index: src/main/java/org/example/crud_site/dao/SetorDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.crud_site.dao;\r\n\r\n// Importando a classe Setor para utilizar seus atributos e métodos.\r\nimport org.example.crud_site.model.Setor;\r\n\r\n// Importando a classe SQLException para tratar os erros de SQL.\r\nimport java.sql.SQLException;\r\n\r\n// Importando a classe ArrayList para criar uma lista de setores.\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n// Importando a classe UUID para usar nos ids.\r\nimport java.util.UUID;\r\n\r\n// Classe SetorDAO\r\npublic class SetorDAO {\r\n\r\n    // Objeto que acessa os atributos que gerenciam a conexão com o banco de dados.\r\n    private Conexao conexao;\r\n\r\n    // Construtor que inicializa a conexão com o banco de dados.\r\n    public SetorDAO() {\r\n        conexao = new Conexao();\r\n    }\r\n\r\n    // Método para inserir um registro na tabela Setor.\r\n    public boolean inserir(String setor) {\r\n\r\n        // Estabelece a conexão com o banco de dados.\r\n        conexao.conectar();\r\n        try {\r\n            // Instrução SQL para inserir um novo setor no banco de dados.\r\n            String sql = \"INSERT INTO Setor (nome) VALUES (?)\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n\r\n            // Define os valores dos parâmetros da consulta.\r\n            conexao.pstmt.setString(1, setor);\r\n\r\n            // Executa a instrução SQL e retorna true se bem-sucedido.\r\n            return conexao.pstmt.executeUpdate() > 0;\r\n        } catch (SQLException e) {\r\n            // Retorna false se ocorrer algum erro.\r\n            return false;\r\n        } finally {\r\n            // Fecha a conexão com o banco de dados.\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n    // Método para alterar o nome de um setor existente na tabela Setor.\r\n    public boolean alterarNomeSetor(Setor setor, String nome) {\r\n\r\n        // Estabelece a conexão com o banco de dados.\r\n        conexao.conectar();\r\n        try {\r\n            // Instrução SQL para atualizar o nome de um setor.\r\n            String sql = \"UPDATE Setor SET nome = ? WHERE nome = ?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n\r\n            // Define os valores dos parâmetros da consulta SQL.\r\n            conexao.pstmt.setString(1, nome);\r\n            conexao.pstmt.setString(2, setor.getNome());\r\n\r\n            // Executa a instrução SQL e verifica se algum registro foi alterado.\r\n            int rows = conexao.pstmt.executeUpdate();\r\n            if (rows == 0) {\r\n                throw new RuntimeException(\"Nenhum registro encontrado.\");\r\n            }\r\n\r\n            // Retorna true se a alteração foi bem-sucedida.\r\n            return rows > 0;\r\n        } catch (SQLException e) {\r\n            // Retorna false em caso de erro.\r\n            return false;\r\n        } finally {\r\n            // Fecha a conexão com o banco de dados.\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n    // Método para excluir um setor da tabela Setor.\r\n    public boolean excluirSetor(String nomeSetor) {\r\n\r\n        // Estabelece a conexão com o banco de dados.\r\n        conexao.conectar();\r\n        try {\r\n            // Instrução SQL para excluir um setor da tabela Setor.\r\n            String sql = \"DELETE FROM Setor WHERE nome = ?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n\r\n            // Define o valor do parâmetro na consulta SQL.\r\n            conexao.pstmt.setString(1, nomeSetor);\r\n\r\n            // Executa a instrução SQL.\r\n            conexao.pstmt.execute();\r\n            // Retorna true se a exclusão foi bem-sucedida.\r\n            return true;\r\n        } catch (SQLException e) {\r\n            // Lança uma exceção em caso de erro.\r\n            throw new RuntimeException(\"Erro ao excluir o registro.\", e);\r\n        } finally {\r\n            // Fecha a conexão com o banco de dados.\r\n            conexao.desconectar();\r\n        }\r\n    }\r\n\r\n    // Método para buscar um setor pelo nome na tabela Setor.\r\n    public Setor buscarSetor(String nomeSetor) {\r\n\r\n        // Cria um objeto Setor para armazenar os dados obtidos da consulta.\r\n        Setor setor;\r\n\r\n        // Estabelece a conexão com o banco de dados.\r\n        conexao.conectar();\r\n        try {\r\n            // Instrução SQL para buscar um setor pelo nome.\r\n            String sql = \"SELECT * FROM Setor WHERE nome = ?\";\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n            conexao.pstmt.setString(1, nomeSetor);\r\n\r\n            // Executa a consulta e armazena o resultado no ResultSet.\r\n            conexao.rs = conexao.pstmt.executeQuery();\r\n\r\n            // Verifica se o ResultSet contém dados.\r\n            if (conexao.rs.next()) {\r\n                // Obtém o nome do setor do ResultSet.\r\n                String nome = conexao.rs.getString(1);\r\n\r\n                // Cria um novo objeto Setor com os dados obtidos.\r\n                return new Setor(nome);\r\n            }\r\n            // Retorna null se não houver nenhum setor com o nome informado.\r\n            return null;\r\n        } catch (SQLException e) {\r\n            // Retorna null em caso de erro.\r\n            return null;\r\n        } finally {\r\n            // Fecha a conexão com o banco de dados.\r\n            conexao.desconectar();\r\n        }\r\n\r\n        // Retorna o objeto Setor encontrado.\r\n\r\n    }\r\n\r\n    // Método para listar todos os setores da tabela Setor.\r\n    public List<Setor> listarSetores() {\r\n\r\n        // Instrução SQL para listar todos os setores.\r\n        String sql = \"SELECT * FROM Setor\";\r\n\r\n        // Cria uma lista vazia para armazenar os setores.\r\n        List<Setor> setores = new ArrayList<>();\r\n\r\n        // Estabelece a conexão com o banco de dados.\r\n        conexao.conectar();\r\n        try {\r\n\r\n            // Prepara e executa a consulta SQL.\r\n            conexao.pstmt = conexao.conn.prepareStatement(sql);\r\n            conexao.rs = conexao.pstmt.executeQuery();\r\n\r\n            // Percorre o ResultSet e armazena os dados dos setores na lista.\r\n            while (conexao.rs.next()) {\r\n\r\n                // Pega os dados do setor do ResultSet.\r\n                UUID id = (UUID) conexao.rs.getObject(1);\r\n                String nome = conexao.rs.getString(2);\r\n\r\n                // Cria um objeto Setor com os dados obtidos.\r\n                Setor setor = new Setor(id, nome);\r\n\r\n                // Adiciona o setor à lista.\r\n                setores.add(setor);\r\n            }\r\n        } catch (SQLException e) {\r\n            // Retorna null em caso de erro.\r\n            return null;\r\n        } finally {\r\n            // Fecha a conexão com o banco de dados.\r\n            conexao.desconectar();\r\n        }\r\n\r\n        // Retorna a lista de setores.\r\n        return setores;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/crud_site/dao/SetorDAO.java b/src/main/java/org/example/crud_site/dao/SetorDAO.java
--- a/src/main/java/org/example/crud_site/dao/SetorDAO.java	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/java/org/example/crud_site/dao/SetorDAO.java	(date 1730889095443)
@@ -49,7 +49,7 @@
     }
 
     // Método para alterar o nome de um setor existente na tabela Setor.
-    public boolean alterarNomeSetor(Setor setor, String nome) {
+    public boolean alterarNomeSetor(String setorAntigo, String setorNovo) {
 
         // Estabelece a conexão com o banco de dados.
         conexao.conectar();
@@ -59,8 +59,8 @@
             conexao.pstmt = conexao.conn.prepareStatement(sql);
 
             // Define os valores dos parâmetros da consulta SQL.
-            conexao.pstmt.setString(1, nome);
-            conexao.pstmt.setString(2, setor.getNome());
+            conexao.pstmt.setString(1, setorNovo);
+            conexao.pstmt.setString(2, setorAntigo);
 
             // Executa a instrução SQL e verifica se algum registro foi alterado.
             int rows = conexao.pstmt.executeUpdate();
Index: src/main/java/org/example/crud_site/controller/setor/ServletAlterarNomeSetor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.crud_site.controller.setor;\r\n\r\nimport jakarta.servlet.ServletException;\r\nimport jakarta.servlet.annotation.WebServlet;\r\nimport jakarta.servlet.http.HttpServlet;\r\nimport jakarta.servlet.http.HttpServletRequest;\r\nimport jakarta.servlet.http.HttpServletResponse;\r\nimport java.io.IOException;\r\nimport org.example.crud_site.dao.SetorDAO;\r\nimport org.example.crud_site.model.Setor;\r\n\r\n@WebServlet(\"/alterarNomeSetor\")\r\npublic class ServletAlterarNomeSetor extends HttpServlet {\r\n    protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\r\n        // Obtém os parâmetros do setor a partir da requisição.\r\n        String nomeSetorAntigo = req.getParameter(\"nome_antigo\");\r\n        String nomeSetorNovo = req.getParameter(\"nome_novo\");\r\n\r\n        // Cria uma nova instância de Setor com o nome antigo.\r\n        Setor setor = new Setor(nomeSetorAntigo);\r\n\r\n\r\n        // Instancia o DAO para interagir com o banco de dados.\r\n        SetorDAO setorDAO = new SetorDAO();\r\n\r\n        // Chama o método para alterar o nome do setor.\r\n        boolean resultado = setorDAO.alterarNomeSetor(setor, nomeSetorNovo);\r\n\r\n        // Se a operação falhar, redireciona para erro.jsp.\r\n        if (!resultado) {\r\n            req.getRequestDispatcher(\"pages/errorPage.jsp\").forward(req, res);\r\n        }\r\n\r\n        // Redireciona para a página de sucesso (ou outra página apropriada).\r\n        req.getRequestDispatcher(\"pages/setor.jsp\").forward(req, res);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/crud_site/controller/setor/ServletAlterarNomeSetor.java b/src/main/java/org/example/crud_site/controller/setor/ServletAlterarNomeSetor.java
--- a/src/main/java/org/example/crud_site/controller/setor/ServletAlterarNomeSetor.java	(revision af795f1bf8005cff0cd7d40380ab0ebce5fe0fbf)
+++ b/src/main/java/org/example/crud_site/controller/setor/ServletAlterarNomeSetor.java	(date 1730889095458)
@@ -13,25 +13,17 @@
 public class ServletAlterarNomeSetor extends HttpServlet {
     protected void doPost(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
         // Obtém os parâmetros do setor a partir da requisição.
-        String nomeSetorAntigo = req.getParameter("nome_antigo");
-        String nomeSetorNovo = req.getParameter("nome_novo");
-
-        // Cria uma nova instância de Setor com o nome antigo.
-        Setor setor = new Setor(nomeSetorAntigo);
-
+        String nomeSetorAntigo = req.getParameter("nomeAntigo");
+        String nomeSetorNovo = req.getParameter("editar");
 
         // Instancia o DAO para interagir com o banco de dados.
         SetorDAO setorDAO = new SetorDAO();
 
-        // Chama o método para alterar o nome do setor.
-        boolean resultado = setorDAO.alterarNomeSetor(setor, nomeSetorNovo);
-
         // Se a operação falhar, redireciona para erro.jsp.
-        if (!resultado) {
+        if (setorDAO.alterarNomeSetor(nomeSetorAntigo, nomeSetorNovo)) {
+            req.getRequestDispatcher("listarSetor").forward(req, res);
+        } else {
             req.getRequestDispatcher("pages/errorPage.jsp").forward(req, res);
         }
-
-        // Redireciona para a página de sucesso (ou outra página apropriada).
-        req.getRequestDispatcher("pages/setor.jsp").forward(req, res);
     }
 }
